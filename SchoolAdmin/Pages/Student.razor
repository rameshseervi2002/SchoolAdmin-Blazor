@page "/student"
@inject HttpClient Http

<h1 style="text-align: center;">Student Details</h1>

@if (todoItems == null)
{
    <p>No Todo Items found.</p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>Rollno</th>
            <th>Name</th>
            <th>DOB</th>
            <th>Class</th>
            <th>ContactNo</th>
            <th>Gender</th>
            <th>JoiningDate</th>
            <th>ParentName</th>
            <th>ParentNumber</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in todoItems)
        {
        <tr>
            <td>@item.StudentRollno</td>
            <td>@item.StudentName</td>
            <td>@item.StudentDOB</td>
            <td>@item.StudentClass</td>
            <td>@item.StudentContactNo</td>
            <td>@item.StudentGender</td>
            <td>@item.StudentJoiningDate</td>
            <td>@item.StudentParentName</td>
            <td>@item.StudentParentNumber</td>

        </tr>
        }
    </tbody>
</table>
}

@code {
    private const string ServiceEndpoint = "https://localhost:5001/api/Student";
    private TodoItem[] todoItems;

    protected override async Task OnInitializedAsync() => await GetTodoItems();

    private async Task GetTodoItems() =>
        todoItems = await Http.GetFromJsonAsync<TodoItem[]>(ServiceEndpoint);



    private class TodoItem
    {
        public int StudentRollno { get; set; }
        public string StudentName { get; set; }
        public string StudentDOB { get; set; }
        public string StudentClass { get; set; }
        public string StudentContactNo { get; set; }
        public string StudentGender { get; set; }
        public string StudentJoiningDate { get; set; }
        public string StudentParentName { get; set; }
        public string StudentParentNumber { get; set; }
    }
}