@page "/staff"
@inject HttpClient Http

<h1 style="text-align: center;">Staff Details</h1>

@if (todoItems == null )
{
    <p>No Todo Items found.</p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Department</th>
            <th>Work</th>
            <th>Experience</th>
            <th>Shift</th>
            <th>DOB</th>
            <th>ContactNo</th>
            <th>JoiningDate</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in todoItems)
        {
            <tr>
                <td>@item.StaffID</td>
                <td>@item.StaffName</td>
                <td>@item.StaffDepartment</td>
                <td>@item.StaffWork</td>
                <td>@item.StaffExperience</td>
                <td>@item.StaffShift</td>
                <td>@item.StaffDOB</td>
                <td>@item.StaffContactNo</td>
                <td>@item.StaffJoiningDate</td>

            </tr>
        }
    </tbody>
</table>
}

@code {
    private const string ServiceEndpoint = "https://localhost:5001/api/Staff";
    private TodoItem[] todoItems;

    protected override async Task OnInitializedAsync() => await GetTodoItems();

    private async Task GetTodoItems() =>
        todoItems = await Http.GetFromJsonAsync<TodoItem[]>(ServiceEndpoint);

    
    private class TodoItem
    {
        public int StaffID { get; set; }
        public string StaffName { get; set; }
        public string StaffDepartment { get; set; }
        public string StaffWork { get; set; }
        public string StaffExperience { get; set; }
        public string StaffShift { get; set; }
        public string StaffDOB { get; set; }
        public string StaffContactNo { get; set; }
        public string StaffJoiningDate { get; set; }
    }
    
}